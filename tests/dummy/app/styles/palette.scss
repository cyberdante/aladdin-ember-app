$aladdin-colors: (
  'primary': #2196f3, //#8e3329, 
  'warning': #d98328,
  'error': #ff0000,
  'secondary': #00BCD4, //#5a1321,
  'foreground': #F8F8F2,
  'background': #272822
);

@function aladdin-color($key: 'primary') {
    @return map-get($aladdin-colors, $key);
}

$color-error: aladdin-color('error'); // #ff0000

// Use tints and shades
$color-error-tinted: mix(white, $color-error, 10%); // #ff1a1a
$color-error-shaded: mix(black, $color-error, 10%); // #e60000

$aladdin-opacity: (
  'light': 0.8, // opacity used with lighter colors
  'dark': 0.4   // opacity used with darker colors
);

@function aladdin-color-alpha($name: 'primary', $opacity: 0) {
    $color: aladdin-color($name);

    // Get the named opacity level, if it exists
    @if map-key-exists($aladdin-opacity, $opacity) {
        $opacity: map-get($aladdin-opacity, $opacity);
    }

    // Use rgba() to manipulate the color's alpha level
    @return rgba($color, $opacity);
}
  
// Example usage:
// $button-transparent-color: aladdin-color-alpha('primary', 'light');
// => rgba(#2196f3, 0.8)

// Returns either a dark or light foreground color, given the background color
@function aladdin-foreground-color($bgcolor, $threshold: .65) {
    @return if(lightness($bgcolor) >= $threshold, $color-dark, $color-light);
}